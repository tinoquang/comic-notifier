// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"context"
	"database/sql"
)

type Querier interface {
	CreateComic(ctx context.Context, arg CreateComicParams) (Comic, error)
	CreateSubscriber(ctx context.Context, arg CreateSubscriberParams) (Subscriber, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteComic(ctx context.Context, id int32) error
	DeleteSubscriberByAppID(ctx context.Context, arg DeleteSubscriberByAppIDParams) error
	DeleteSubscriberByPSID(ctx context.Context, arg DeleteSubscriberByPSIDParams) error
	DeleteUser(ctx context.Context, psid sql.NullString) error
	GetComic(ctx context.Context, id int32) (Comic, error)
	GetComicByPSIDAndComicID(ctx context.Context, arg GetComicByPSIDAndComicIDParams) (Comic, error)
	GetComicByURL(ctx context.Context, url string) (Comic, error)
	GetComicForUpdate(ctx context.Context, id int32) (Comic, error)
	GetSubscriberByAppIDAndComicID(ctx context.Context, arg GetSubscriberByAppIDAndComicIDParams) (Subscriber, error)
	GetSubscriberByPSIDAndComicID(ctx context.Context, arg GetSubscriberByPSIDAndComicIDParams) (Subscriber, error)
	GetUserByAppID(ctx context.Context, appid sql.NullString) (User, error)
	GetUserByPSID(ctx context.Context, psid sql.NullString) (User, error)
	ListComics(ctx context.Context) ([]Comic, error)
	ListComicsByAppID(ctx context.Context, userAppid string) ([]Comic, error)
	ListComicsByName(ctx context.Context, arg ListComicsByNameParams) ([]Comic, error)
	ListComicsByPSID(ctx context.Context, userPsid string) ([]Comic, error)
	ListSubscriberByComicID(ctx context.Context, comicID int32) ([]Subscriber, error)
	ListUsers(ctx context.Context) ([]User, error)
	UpdateComic(ctx context.Context, arg UpdateComicParams) (Comic, error)
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
}

var _ Querier = (*Queries)(nil)
